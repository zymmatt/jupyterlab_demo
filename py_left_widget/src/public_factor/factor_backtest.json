{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "f88eee82",
   "metadata": {},
   "outputs": [],
   "source": [
    "start = '2020-07-21'\n",
    "end = '2021-07-20'\n",
    "freqValue = 'month_end'\n",
    "benchmark= '000905.SH'\n",
    "group = 5\n",
    "factor_name = 'amplitude'\n",
    "name = '振幅（amplitude）'\n",
    "factor_timeperiod = '22'"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2233ba34",
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "from smartbeta.backtest.group_factor_backtest import GroupFactorBackTest\n",
    "import time\n",
    "\n",
    "#接收前端传入参数\n",
    "# bt_name = 'bt_name'\n",
    "\n",
    "\n",
    "startDate = start.replace('-', '')\n",
    "endDate = end.replace('-', '')\n",
    "\n",
    "if factor_timeperiod == '':\n",
    "    factor_timeperiod = 22\n",
    "\n",
    "freq = freqValue\n",
    "if freq == 'daily':\n",
    "    freq ='每日调仓'\n",
    "elif freq == 'week_end':\n",
    "    freq = '每周调仓'\n",
    "else:\n",
    "    freq = '每月调仓'\n",
    "\n",
    "print('')\n",
    "# print('回测名称：' + str(bt_name))\n",
    "print('起止时间：' + str(start) + ' - ' + str(end))\n",
    "print('调仓周期：' + str(freq))\n",
    "print('参考基准：' + str(benchmark))\n",
    "print('回测因子：' + str(name))\n",
    "print('')\n",
    "print('正在进行分组回测...')\n",
    "print('')\n",
    "\n",
    "if factor_timeperiod == '':\n",
    "    factors = [{'name': factor_name, 'direction': -1}]\n",
    "else: \n",
    "    factor_timeperiod = int(factor_timeperiod)\n",
    "    factors = [{'name': factor_name, 'direction': -1, 'factor_parameters':{'timeperiod': factor_timeperiod}}]\n",
    "\n",
    "bt = GroupFactorBackTest(benchmark, startDate, endDate, factors, group=group, freq=freqValue)\n",
    "\n",
    "bt.set_buy_limit_down(False)\n",
    "bt.run()\n",
    "bt.analy_plot()\n",
    "\n",
    "print(\"各个分组相对于基准的收益：\")\n",
    "bt.relative_bech_ret_plot()\n",
    "\n",
    "print(\"最高分位数的收益减去最低分位数的收益曲线：\")\n",
    "bt.max_min_ret_plot()\n",
    "\n",
    "print(\"各个分组的累积收益：\")\n",
    "bt.cum_return_plot_bar()"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
